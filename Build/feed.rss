<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Hello World</title><description></description><link>https://lyleresnick.com</link><atom:link
    href="https://lyleresnick.com/feed.rss"
    rel="self" type="application/rss+xml"
/><language>en</language><generator>Ignite v0.2.1</generator><item><guid isPermaLink="true">https://lyleresnick.com/Routing-in-VIPER-Architecture</guid><title>Routing in VIPER Architecture</title><link>https://lyleresnick.com/Routing-in-VIPER-Architecture</link><description><![CDATA[The primary function of a Router is to manage the display of a group of scenes, implemented by ViewControllers, using a pattern such as stacking, direct access or serial access.]]></description><pubDate>Wed, 19 Sep 2018 05:00:00 -0700</pubDate><dc:creator><![CDATA[Lyle Resnick]]></dc:creator></item><item><guid isPermaLink="true">https://lyleresnick.com/Solving-a-Complex-UITableView-Using-the-VIPER-Architecture</guid><title>Solving a Complex UITableView Using the VIPER Architecture</title><link>https://lyleresnick.com/Solving-a-Complex-UITableView-Using-the-VIPER-Architecture</link><description><![CDATA[VIPER is an application architecture - a set of classes that work together to structure a solution.]]></description><pubDate>Sun, 03 Sep 2017 05:00:00 -0700</pubDate><dc:creator><![CDATA[Lyle Resnick]]></dc:creator></item><item><guid isPermaLink="true">https://lyleresnick.com/A-Crash-Course-on-the-VIPER-Architecture</guid><title>A Crash Course on the VIPER Architecture</title><link>https://lyleresnick.com/A-Crash-Course-on-the-VIPER-Architecture</link><description><![CDATA[Iâ€™ve been exploring and using the VIPER architecture now for about 2 years. I think it is a really sensible solution for organizing and reducing the size of a Massive ViewController.]]></description><pubDate>Tue, 29 Aug 2017 05:00:00 -0700</pubDate><dc:creator><![CDATA[Lyle Resnick]]></dc:creator></item><item><guid isPermaLink="true">https://lyleresnick.com/Solving-a-Complex-UITableView-Even-More-Swiftly</guid><title>Solving a Complex UITableView Even More Swiftly</title><link>https://lyleresnick.com/Solving-a-Complex-UITableView-Even-More-Swiftly</link><description><![CDATA[In Solving a Complex UITableView using Swift, we reviewed a solution for solving a complex UITableView. In this article, we will improve the solution by refactoring the code in three ways:]]></description><pubDate>Thu, 29 Jun 2017 05:00:00 -0700</pubDate><dc:creator><![CDATA[Lyle Resnick]]></dc:creator></item><item><guid isPermaLink="true">https://lyleresnick.com/Solving-a-Complex-UITableView-using-Swift</guid><title>Solving a Complex UITableView using Swift</title><link>https://lyleresnick.com/Solving-a-Complex-UITableView-using-Swift</link><description><![CDATA[In this article we will discuss a technique for solving a complex UITableView. By complex, I mean a tableView that will display many more row types than exist in the source data set - in this case seven.  At the same time, we will discuss a simple technique to reduce the size of the UIViewController that owns the tableView.]]></description><pubDate>Sat, 13 May 2017 05:00:00 -0700</pubDate><dc:creator><![CDATA[Lyle Resnick]]></dc:creator></item></channel></rss>